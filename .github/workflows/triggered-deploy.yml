name: Triggered Deploy

on:
  workflow_call:
    inputs:
      config_yaml:
        required: true
        type: string
    outputs:
      result:
        description: "Final config applied"
        value: ${{ jobs.deploy.outputs.result }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.config.outcome }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: selva-k-thoughtworks/constructor
          ref: main
          path: caller_repo

      - name: Write config.yaml from input
        run: echo "${{ inputs.config_yaml }}" | base64 --decode > caller_repo/config.yaml

      - name: List files in workspace
        run: ls -l
        working-directory: caller_repo

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt
        working-directory: caller_repo

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Validate Config and generate with defaults
        id: validate_config
        run: |
          python3 validate_config.py > validate-output.txt 2>&1
        continue-on-error: true
        working-directory: caller_repo
      
      - name: Add Summary to GitHub Step Summary
        if: github.ref == 'refs/heads/main'
        run: |
          if grep -q "Validation failed" validate-output.txt; then
            echo '## 🚀 Config Validation Summary' >> $GITHUB_STEP_SUMMARY
            echo '' >> $GITHUB_STEP_SUMMARY
            echo "❌ Validation failed detected. Exiting..." >> $GITHUB_STEP_SUMMARY
            cat validate-output.txt >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ No validation failures found."
          fi
        working-directory: caller_repo

      - name: Fianl version of config.yaml
        run: cat config.yaml
        working-directory: caller_repo

      - name: Generate tfvars from YAML
        run: python3 generate_tfvars.py
        working-directory: caller_repo

      - name: Extract project name from config.yaml
        id: project
        run: |
          PROJECT=$(python3 -c "import yaml; print(yaml.safe_load(open('config.yaml'))['project'])")
          echo "project=$PROJECT" >> $GITHUB_OUTPUT
        working-directory: caller_repo

      - name: Terraform Init
        run: terraform init -backend-config="key=infra/${{ steps.project.outputs.project }}/terraform.tfstate"
        working-directory: caller_repo

      - name: Terraform Plan
        run: terraform plan -out=plan.out -var-file=terraform.tfvars.json
        working-directory: caller_repo

      - name: Export Terraform plan to JSON
        run: terraform show -json plan.out > plan.json
        working-directory: caller_repo

      # - name: Validate IAM policies and attachments
      #   run: python3 test_validate_iam_policy.py
      #   working-directory: caller_repo

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -var-file=terraform.tfvars.json | tee apply-output.txt
        working-directory: caller_repo

      - name: Export Terraform state to JSON
        if: github.ref == 'refs/heads/main'
        run: terraform show -json > apply-result.json
        working-directory: caller_repo

      - name: Generate Deployment Summary
        if: github.ref == 'refs/heads/main'
        run: python3 summary.py | tee summary-output.txt
        working-directory: caller_repo

      - name: Add Summary to GitHub Step Summary
        if: github.ref == 'refs/heads/main'
        run: |
          echo '## 🚀 Infrastructure Deployment Summary' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          cat summary-output.txt >> $GITHUB_STEP_SUMMARY
        working-directory: caller_repo